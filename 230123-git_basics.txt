// git init
    / 현재 디렉토리를 git 으로 관리하겠다, 초기화하겠다

// git add
    / 새로운 커밋 이력을 하나 만들 건데, 거기에 포함할 파일들을 추가하겠다
    / 즉, 커밋하려고 대기 중인 파일 목록(stage)에 추가하겠다.
    / git add .
        > 현재 디렉토리에 있는 모든 파일들을 stage 에 추가하겠다.
    / git add src/gitFirst/file1.txt
        > "src/gitFirst/file1.txt" 디렉토리에 있는 파일을 stage 에 추가하겠다.

// git commit
    / 새로운 커밋 이력을 하나 만든다.
    / 단, 커밋 대상 파일들(stage)에 있는 애들만 가지고 커밋 이력을 만든다.
    / git commit -m "my msg"
        > 새로운 커밋 이력을 만들고, 그 커밋에 "my msg" 라는 메모를 남겨둔다. (보통 무엇을 왜 수정했는지 등을 남겨둠)

// git log
    / git log 
        > 커밋 이력과 커밋 메세지를 본다
    / git log -p
        > 커밋 이력과 커밋 메세지 + 변경 사항(diff) 를 본다
    / git log --oneline
        > 컷밋 이력만 간단하게 본다.

// git diff
    / git diff
        > 현재 내 파일들과 git 의 index 가 가리키는 상태의 파일들과 차이점을 비교한다
    / git diff 5d09b95..0175b1b
        > 커밋 5d09b95 과 0175b1b 사이의 차이점을 보여준다

// git reset
    / 커밋을 취소하고 index 를 과거로 되돌림.
    / 주의 사항
        > reset 은 로컬에서만 
        > 원격 저장소로 올라가면 팀으로 쓰는 거기 때문에 reset 은 절대로 하지 않음.
        > 이미 원격에 올라가 있는데 reset 으로 커밋 이력을 과거로 돌려 버리면 이미 미래까지 가 있는 사람들은 커밋 이력 다 꼬임..
    / git reset --hard 0175b1b
        > 파일과 index 와 stage 등을 모두 0175b1b 로 되돌림.

// git revert
    / 커밋을 취소하고 index 를 새로 만듦.
    / 커밋을 취소하는 것 자체를 하나의 커밋으로 만듦.
    / 그니까 커밋이 새로 하나 더 만들어지겠지.
        >



// 삶의 지혜 하나.
    / 강사님이 중국어를 배움. 가장 먼저 한 일이, 중국어에서 가장 자주 쓰이는 단어, 빈도수가 높은 단어들을 찾아 봤음. 
    1위는 6글자짜리 뭐시기가 있더군. 이 단어 혼자서 중국어 사용의 10%를 차지함.
    이렇게 중요한, 우선순위가 높은 단어들부터 공부함.
    그 다음에 한 일은, 어떤 중국어가 영어로는 무슨 뜻인지 묻는 표현.
    또는 반대로, 내가 아는 이 영어가 중국어로는 뭐라고 하는지 묻는 표현.
    이렇게 하면 가장 핵심적인 부품들을 밑천으로 가지고 공부를 시작함.
    그리고 내가 모르는 것을 새롭게 아는 방법도 공부함.
    이 두 가지만 있으면 어떤 분야든 공부하는 게 수월하고 편하지 않겠냐는 것.
    / 이러한 원리를 적용해 봤을 때, 첫 번째, 우선순위.
    그럼 git 에서는 가장 자주 쓰는 명령어들이 무엇이겠는가? 
    구글 검색어 순으로 순위를 내어봤다.
        > commit    (약 8%)
        > push      (약 8%)
        > pull      (약 7.5%)
        > clone     (약 7%)
        > checkout  (약 7%)
        > add       (약 7%)
        > branch
        > log
        > diff
        > fetch
        > merge
        > init
        > status
        > reset
    / 자 이제 두 번째, 내가 모르는 것을 배우는 방법.    
        > git commit -help
            - commit 에 대한 guide 를 커맨드창으로 본다
        > git commit --help 
            - commit 에 대한 guide 를 html 파일로 연다